{
  "hash": "b3cf4c1a4f125bf3b0331a0f487576b1",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 14 `rioxarray`\n---\n\n\n\nIn this lesson we will introduce [`rioxarray`](https://corteva.github.io/rioxarray/stable/), a Python extension for `xarray` to manipulate `xarray.DataArray`s as rasters. \nThe name `rioxarray` stands for *raster input/output + xarray*. \n\nWe will use the `rioxarray`'s `rio` accessor to obtain raster information from an `xarray.DataArray` and do some raster manipulations (calculate NDVI). \n\n## About the data\nThe raster files we will use today come from the [US National Agriculture Imagery Program (NAIP)](https://naip-usdaonline.hub.arcgis.com). \nNAIP images are are high-resolution aerial images with four spectral bands: red (R), green (G), blue (B) and near-infrared (NIR). \nThe raster's we'll use today are from 2020.\n\nThe data used in this lesson was pre-processing from a complete NAIP scene to separate the RGB bands from the NIR band and reduce the spatial extent. \nThe data was accessed through [Microsoft's Planetary Computer NAIP data repository](https://planetarycomputer.microsoft.com/dataset/naip#overview).\n\n## Import a TIF file\n\nLet's start by loading the libraries we will use: \n\n\n::: {#1120c330 .cell execution_count=1}\n``` {.python .cell-code}\nimport os\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimport geopandas as gpd\n\nimport rioxarray as rioxr\n```\n:::\n\n\nThere are [multiple ways of opening a TIF file using `xarray` or `rioxarray`](https://corteva.github.io/rioxarray/html/getting_started/getting_started.html). \nUsing the `rioxarray.open_rasterio()` function to open the TIF file is a simple way to import the raster file as an `xarray.DataArray` and make sure all our geospatial data gets loaded correctly:\n\n::: {#1a0b9a67 .cell execution_count=2}\n``` {.python .cell-code}\n# Import NIR TIF file\nfp = os.path.join('data','NAIP_SB_nir.tif')\nnir = rioxr.open_rasterio(fp)\nnir\n```\n\n::: {.cell-output .cell-output-display execution_count=66}\n```{=html}\n<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=dark],\nbody[data-theme=dark],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1F1F1F;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 20px 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: none;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: '►';\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: '▼';\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: '(';\n}\n\n.xr-dim-list:after {\n  content: ')';\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: ',';\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (band: 1, y: 3208, x: 2419)&gt;\n[7760152 values with dtype=uint8]\nCoordinates:\n  * band         (band) int64 1\n  * x            (x) float64 2.512e+05 2.512e+05 ... 2.527e+05 2.527e+05\n  * y            (y) float64 3.813e+06 3.813e+06 ... 3.811e+06 3.811e+06\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Area\n    scale_factor:   1.0\n    add_offset:     0.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>band</span>: 1</li><li><span class='xr-has-index'>y</span>: 3208</li><li><span class='xr-has-index'>x</span>: 2419</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-23b4393d-ad6b-4f6f-8940-314535cc67d3' class='xr-array-in' type='checkbox' checked><label for='section-23b4393d-ad6b-4f6f-8940-314535cc67d3' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>...</span></div><div class='xr-array-data'><pre>[7760152 values with dtype=uint8]</pre></div></div></li><li class='xr-section-item'><input id='section-586b577a-263a-41ce-b190-fb159f8cb846' class='xr-section-summary-in' type='checkbox'  checked><label for='section-586b577a-263a-41ce-b190-fb159f8cb846' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>band</span></div><div class='xr-var-dims'>(band)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1</div><input id='attrs-07c441ad-b286-4360-b050-fc9f8e9aa996' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-07c441ad-b286-4360-b050-fc9f8e9aa996' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-fe65c96d-0b49-4b91-bb71-de76fedf26c5' class='xr-var-data-in' type='checkbox'><label for='data-fe65c96d-0b49-4b91-bb71-de76fedf26c5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>2.512e+05 2.512e+05 ... 2.527e+05</div><input id='attrs-8a4874d9-e845-4afe-92fc-5119d0bdfbe0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-8a4874d9-e845-4afe-92fc-5119d0bdfbe0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0b444525-bbc1-4f4f-b6b9-41d0dc70fff6' class='xr-var-data-in' type='checkbox'><label for='data-0b444525-bbc1-4f4f-b6b9-41d0dc70fff6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([251219.1, 251219.7, 251220.3, ..., 252668.7, 252669.3, 252669.9])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>3.813e+06 3.813e+06 ... 3.811e+06</div><input id='attrs-7fdf3d05-3d6c-4e66-9232-9b18cdf83ea7' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-7fdf3d05-3d6c-4e66-9232-9b18cdf83ea7' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-805992dd-9e46-41a9-a2a8-fbf3fe9144c7' class='xr-var-data-in' type='checkbox'><label for='data-805992dd-9e46-41a9-a2a8-fbf3fe9144c7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([3812951.7, 3812951.1, 3812950.5, ..., 3811028.7, 3811028.1, 3811027.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>spatial_ref</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0</div><input id='attrs-3f28d4d3-30d6-4d00-bb10-7af7883d362b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-3f28d4d3-30d6-4d00-bb10-7af7883d362b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e3c11b71-f347-417b-8f0b-57c70ecc53a2' class='xr-var-data-in' type='checkbox'><label for='data-e3c11b71-f347-417b-8f0b-57c70ecc53a2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>crs_wkt :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>semi_major_axis :</span></dt><dd>6378137.0</dd><dt><span>semi_minor_axis :</span></dt><dd>6356752.314140356</dd><dt><span>inverse_flattening :</span></dt><dd>298.257222101</dd><dt><span>reference_ellipsoid_name :</span></dt><dd>GRS 1980</dd><dt><span>longitude_of_prime_meridian :</span></dt><dd>0.0</dd><dt><span>prime_meridian_name :</span></dt><dd>Greenwich</dd><dt><span>geographic_crs_name :</span></dt><dd>NAD83</dd><dt><span>horizontal_datum_name :</span></dt><dd>North American Datum 1983</dd><dt><span>projected_crs_name :</span></dt><dd>NAD83 / UTM zone 11N</dd><dt><span>grid_mapping_name :</span></dt><dd>transverse_mercator</dd><dt><span>latitude_of_projection_origin :</span></dt><dd>0.0</dd><dt><span>longitude_of_central_meridian :</span></dt><dd>-117.0</dd><dt><span>false_easting :</span></dt><dd>500000.0</dd><dt><span>false_northing :</span></dt><dd>0.0</dd><dt><span>scale_factor_at_central_meridian :</span></dt><dd>0.9996</dd><dt><span>spatial_ref :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>GeoTransform :</span></dt><dd>251218.8 0.6000000000000072 0.0 3812952.0 0.0 -0.600000000000058</dd></dl></div><div class='xr-var-data'><pre>array(0)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-ea0af3e2-b45f-43d6-b811-c49cc7c931fa' class='xr-section-summary-in' type='checkbox'  ><label for='section-ea0af3e2-b45f-43d6-b811-c49cc7c931fa' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>band</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-270b34d4-27f1-45d2-b438-6d22bded168e' class='xr-index-data-in' type='checkbox'/><label for='index-270b34d4-27f1-45d2-b438-6d22bded168e' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([1], dtype=&#x27;int64&#x27;, name=&#x27;band&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-5dce5224-4665-4266-bbbf-c8192f831629' class='xr-index-data-in' type='checkbox'/><label for='index-5dce5224-4665-4266-bbbf-c8192f831629' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([251219.09999999998, 251219.69999999998,           251220.3,\n       251220.89999999997, 251221.49999999997, 251222.09999999998,\n       251222.69999999998,           251223.3, 251223.89999999997,\n       251224.49999999997,\n       ...\n                 252664.5,           252665.1, 252665.69999999998,\n                 252666.3,           252666.9,           252667.5,\n                 252668.1, 252668.69999999998,           252669.3,\n                 252669.9],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=2419))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-04a360d8-ff0b-4477-8199-fbc0eabab263' class='xr-index-data-in' type='checkbox'/><label for='index-04a360d8-ff0b-4477-8199-fbc0eabab263' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([         3812951.7,          3812951.1,          3812950.5,\n       3812949.9000000004, 3812949.3000000003,          3812948.7,\n                3812948.1,          3812947.5, 3812946.9000000004,\n       3812946.3000000003,\n       ...\n                3811032.9,          3811032.3,          3811031.7,\n                3811031.1,          3811030.5,          3811029.9,\n                3811029.3,          3811028.7,          3811028.1,\n                3811027.5],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=3208))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-870e4509-0ecb-49f3-873b-82ea2c1383c1' class='xr-section-summary-in' type='checkbox'  checked><label for='section-870e4509-0ecb-49f3-873b-82ea2c1383c1' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>AREA_OR_POINT :</span></dt><dd>Area</dd><dt><span>scale_factor :</span></dt><dd>1.0</dd><dt><span>add_offset :</span></dt><dd>0.0</dd></dl></div></li></ul></div></div>\n```\n:::\n:::\n\n\nNotice we see all the components of an `xarray.DataArray`: its dimensions (band, y, x), the coordiantes for each dimension, and some attributes. We can also directly access some of these attribues:\n\n::: {#2779b17a .cell execution_count=3}\n``` {.python .cell-code}\nprint('Shape: ', nir.shape)\nprint('Data type: ', nir.dtype, '\\n')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nShape:  (1, 3208, 2419)\nData type:  uint8 \n\n```\n:::\n:::\n\n\nUsing the `.values` attribute we can retrieve the underlying `numpy.array` holding the values of the variable:\n\n::: {#de7393c5 .cell execution_count=4}\n``` {.python .cell-code}\nprint(type(nir.values))\nnir.values\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'numpy.ndarray'>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=68}\n```\narray([[[167, 164, 161, ..., 147, 152, 151],\n        [170, 170, 168, ..., 151, 149, 154],\n        [176, 177, 177, ..., 151, 151, 151],\n        ...,\n        [ 94,  88, 101, ...,  83,  88,  79],\n        [108,  95, 103, ...,  92,  91,  75],\n        [ 94,  90, 104, ...,  87,  88,  82]]], dtype=uint8)\n```\n:::\n:::\n\n\nWe can also plot our data:\n\n::: {#34dbfbba .cell execution_count=5}\n``` {.python .cell-code}\nnir.plot()\n```\n\n::: {.cell-output .cell-output-display}\n![](lesson-15-rioxarray_files/figure-html/cell-6-output-1.png){width=598 height=449}\n:::\n:::\n\n\nNotice the coordinates on the x and y axes.\n\nThis map shows the light captured in the near-infrared spectrum by a sensor on a plane. \n**Can you guess where this?** \nIf you guessed Santa Barbara downtown, you guessed right! \n\n## Drop a dimension\n\nNotice that our raster has an unnecessary extra dimension: band.\n\n::: {#8e8536f9 .cell execution_count=6}\n``` {.python .cell-code}\nprint(\"Sizes of dimensions:\", dict(nir.sizes))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSizes of dimensions: {'band': 1, 'y': 3208, 'x': 2419}\n```\n:::\n:::\n\n\nThis is making this `xarray.DataArray` three-dimensional when it is not needed. \nWe can \"squeeze this dimension\" of length 1 by:\n\n1. using the [`squeeze()` method](https://docs.xarray.dev/en/stable/generated/xarray.DataArray.squeeze.html).\nIf we don't pass any parameters, then `squeeze()` gets rid of all dimensions with length one, and then\n\n2. getting rid of the associated coordinates for this dimension. \nWe can do this using the `xarray.DataArray` `drop()` method and specifying the name of the coordinates we want to remove, in this case 'band'.\n\nLet's do this:\n\n::: {#25525a95 .cell execution_count=7}\n``` {.python .cell-code}\n# Original dimensions and coordinates\nprint(nir.dims, nir.coords,'\\n')\n\n# Remove length 1 dimension (band)\nnir = nir.squeeze()\nprint(nir.dims, nir.coords,'\\n')\n\n# Remove coordinates associated to band\nnir = nir.drop('band')\nprint(nir.dims, nir.coords)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n('band', 'y', 'x') Coordinates:\n  * band         (band) int64 1\n  * x            (x) float64 2.512e+05 2.512e+05 ... 2.527e+05 2.527e+05\n  * y            (y) float64 3.813e+06 3.813e+06 ... 3.811e+06 3.811e+06\n    spatial_ref  int64 0 \n\n('y', 'x') Coordinates:\n    band         int64 1\n  * x            (x) float64 2.512e+05 2.512e+05 ... 2.527e+05 2.527e+05\n  * y            (y) float64 3.813e+06 3.813e+06 ... 3.811e+06 3.811e+06\n    spatial_ref  int64 0 \n\n('y', 'x') Coordinates:\n  * x            (x) float64 2.512e+05 2.512e+05 ... 2.527e+05 2.527e+05\n  * y            (y) float64 3.813e+06 3.813e+06 ... 3.811e+06 3.811e+06\n    spatial_ref  int64 0\n```\n:::\n:::\n\n\n## `rio` accessor\n\nRemember an **accessor** in Python let's us access a different set of properties of an object. We have previously used accesors like `.str` and `.dt` in `pandas` to work with strings and dates. In this lesson, we will use the `.rio` accessor for an `xarray.DataArray` to access its raster properties. \nFor example, we can access the number of bands, height, width, spatial bounding box, and CRS:\n\n::: {#dd35d510 .cell execution_count=8}\n``` {.python .cell-code}\n# Examine raster attributes using rio accessor\nprint('Number of bands: ', nir.rio.count)\nprint('Height: ', nir.rio.height)\nprint('Width: ', nir.rio.width, '\\n')\n\nprint('Spatial bounding box: ')\nprint(nir.rio.bounds(), '\\n')\n\nprint('CRS: ', nir.rio.crs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNumber of bands:  1\nHeight:  3208\nWidth:  2419 \n\nSpatial bounding box: \n(251218.8, 3811027.2, 252670.19999999998, 3812952.0) \n\nCRS:  EPSG:26911\n```\n:::\n:::\n\n\n<!--\n![Source: [spatialreference.org](https://spatialreference.org/ref/epsg/26911/)]()\n-->\n\n## Multi-band raster\n\nLet's now import the RGB raster:\n\n::: {#95575de6 .cell execution_count=9}\n``` {.python .cell-code}\n# Import RGB raster\nfp = os.path.join('data','NAIP_SB_rgb.tif')\nrgb = rioxr.open_rasterio(fp)\nrgb\n```\n\n::: {.cell-output .cell-output-display execution_count=73}\n```{=html}\n<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=dark],\nbody[data-theme=dark],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1F1F1F;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 20px 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: none;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: '►';\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: '▼';\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: '(';\n}\n\n.xr-dim-list:after {\n  content: ')';\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: ',';\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (band: 3, y: 3208, x: 2419)&gt;\n[23280456 values with dtype=uint8]\nCoordinates:\n  * band         (band) int64 1 2 3\n  * x            (x) float64 2.512e+05 2.512e+05 ... 2.527e+05 2.527e+05\n  * y            (y) float64 3.813e+06 3.813e+06 ... 3.811e+06 3.811e+06\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Area\n    scale_factor:   1.0\n    add_offset:     0.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>band</span>: 3</li><li><span class='xr-has-index'>y</span>: 3208</li><li><span class='xr-has-index'>x</span>: 2419</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-14ee62b4-242d-4d99-bb42-7f46209b98ca' class='xr-array-in' type='checkbox' checked><label for='section-14ee62b4-242d-4d99-bb42-7f46209b98ca' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>...</span></div><div class='xr-array-data'><pre>[23280456 values with dtype=uint8]</pre></div></div></li><li class='xr-section-item'><input id='section-10944475-494a-490f-858e-7ad436aea0de' class='xr-section-summary-in' type='checkbox'  checked><label for='section-10944475-494a-490f-858e-7ad436aea0de' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>band</span></div><div class='xr-var-dims'>(band)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 2 3</div><input id='attrs-e85bbbd6-f10c-4826-868e-5c9dcf6045ef' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e85bbbd6-f10c-4826-868e-5c9dcf6045ef' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1024bd9d-a2cd-4a65-8932-477deff9d4ee' class='xr-var-data-in' type='checkbox'><label for='data-1024bd9d-a2cd-4a65-8932-477deff9d4ee' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 2, 3])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>2.512e+05 2.512e+05 ... 2.527e+05</div><input id='attrs-da002cdf-01d2-4750-9a4a-3bf8fe048d92' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-da002cdf-01d2-4750-9a4a-3bf8fe048d92' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d33ee2ac-9831-4402-9f9c-89c43c2cb951' class='xr-var-data-in' type='checkbox'><label for='data-d33ee2ac-9831-4402-9f9c-89c43c2cb951' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([251219.1, 251219.7, 251220.3, ..., 252668.7, 252669.3, 252669.9])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>3.813e+06 3.813e+06 ... 3.811e+06</div><input id='attrs-e78517e3-8782-414e-b347-53fe4fb5028a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e78517e3-8782-414e-b347-53fe4fb5028a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-acbc2ed2-9028-4276-8af2-a9db9576a240' class='xr-var-data-in' type='checkbox'><label for='data-acbc2ed2-9028-4276-8af2-a9db9576a240' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([3812951.7, 3812951.1, 3812950.5, ..., 3811028.7, 3811028.1, 3811027.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>spatial_ref</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0</div><input id='attrs-bd1159de-bf26-4969-8c92-88ab89fb2cbd' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-bd1159de-bf26-4969-8c92-88ab89fb2cbd' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-683fa24f-0ef3-4888-9852-65525e09d5b2' class='xr-var-data-in' type='checkbox'><label for='data-683fa24f-0ef3-4888-9852-65525e09d5b2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>crs_wkt :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>semi_major_axis :</span></dt><dd>6378137.0</dd><dt><span>semi_minor_axis :</span></dt><dd>6356752.314140356</dd><dt><span>inverse_flattening :</span></dt><dd>298.257222101</dd><dt><span>reference_ellipsoid_name :</span></dt><dd>GRS 1980</dd><dt><span>longitude_of_prime_meridian :</span></dt><dd>0.0</dd><dt><span>prime_meridian_name :</span></dt><dd>Greenwich</dd><dt><span>geographic_crs_name :</span></dt><dd>NAD83</dd><dt><span>horizontal_datum_name :</span></dt><dd>North American Datum 1983</dd><dt><span>projected_crs_name :</span></dt><dd>NAD83 / UTM zone 11N</dd><dt><span>grid_mapping_name :</span></dt><dd>transverse_mercator</dd><dt><span>latitude_of_projection_origin :</span></dt><dd>0.0</dd><dt><span>longitude_of_central_meridian :</span></dt><dd>-117.0</dd><dt><span>false_easting :</span></dt><dd>500000.0</dd><dt><span>false_northing :</span></dt><dd>0.0</dd><dt><span>scale_factor_at_central_meridian :</span></dt><dd>0.9996</dd><dt><span>spatial_ref :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>GeoTransform :</span></dt><dd>251218.8 0.6000000000000072 0.0 3812952.0 0.0 -0.600000000000058</dd></dl></div><div class='xr-var-data'><pre>array(0)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-0b83f261-7879-4834-9949-b34d11fbb542' class='xr-section-summary-in' type='checkbox'  ><label for='section-0b83f261-7879-4834-9949-b34d11fbb542' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>band</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-17390f2c-7eea-423b-b224-16c8600c5d61' class='xr-index-data-in' type='checkbox'/><label for='index-17390f2c-7eea-423b-b224-16c8600c5d61' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([1, 2, 3], dtype=&#x27;int64&#x27;, name=&#x27;band&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-c1659444-5918-47ef-bba0-2a63fdcbceb1' class='xr-index-data-in' type='checkbox'/><label for='index-c1659444-5918-47ef-bba0-2a63fdcbceb1' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([251219.09999999998, 251219.69999999998,           251220.3,\n       251220.89999999997, 251221.49999999997, 251222.09999999998,\n       251222.69999999998,           251223.3, 251223.89999999997,\n       251224.49999999997,\n       ...\n                 252664.5,           252665.1, 252665.69999999998,\n                 252666.3,           252666.9,           252667.5,\n                 252668.1, 252668.69999999998,           252669.3,\n                 252669.9],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=2419))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-1b2c6013-c95c-4156-943f-71b24bffef21' class='xr-index-data-in' type='checkbox'/><label for='index-1b2c6013-c95c-4156-943f-71b24bffef21' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([         3812951.7,          3812951.1,          3812950.5,\n       3812949.9000000004, 3812949.3000000003,          3812948.7,\n                3812948.1,          3812947.5, 3812946.9000000004,\n       3812946.3000000003,\n       ...\n                3811032.9,          3811032.3,          3811031.7,\n                3811031.1,          3811030.5,          3811029.9,\n                3811029.3,          3811028.7,          3811028.1,\n                3811027.5],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=3208))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-a6637a89-e951-4946-9f9b-28927a0a7f7b' class='xr-section-summary-in' type='checkbox'  checked><label for='section-a6637a89-e951-4946-9f9b-28927a0a7f7b' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>AREA_OR_POINT :</span></dt><dd>Area</dd><dt><span>scale_factor :</span></dt><dd>1.0</dd><dt><span>add_offset :</span></dt><dd>0.0</dd></dl></div></li></ul></div></div>\n```\n:::\n:::\n\n\nNotice this raster has three bands, instead of one. \nThis makes sense because we know these bands correspond to the red, green and blue bands of the image. \n\n:::{.callout-tip}\n## Check-in\nObtain the following information about the RGB raster: shape, number of bands, data type of its values and CRS.\n\n<!--\n```python\nprint('rgb shape: ', rgb.shape)\nprint('data type: ', rgb.dtype)\nprint('# bands: ', rgb.rio.count)\nprint('CRS: ', rgb.rio.crs)\n```\n-->\n:::\n\nFinally, let's plot this raster.\nSince it has three bands, we can plot it as an image using the `.plot.imshow()` method, which will interpret the three bands of the object as RGB.\n\n::: {#8dd706b7 .cell execution_count=10}\n``` {.python .cell-code}\n# Plot three bands as RGB image\nrgb_aspect_ratio = rgb.rio.width / rgb.rio.height  # Raster's aspect ratio\nrgb.plot.imshow(size=6,  # Plot's height in inches\n                aspect=rgb_aspect_ratio  # Ratio of width/height\n                )\n```\n\n::: {.cell-output .cell-output-display}\n![](lesson-15-rioxarray_files/figure-html/cell-11-output-1.png){width=448 height=523}\n:::\n:::\n\n\n## Clip a raster\n\nOur area of interest (AOI) for this lesson is a smaller region that includes only a few blocks around the NCEAS building. \nThis is outlined in a GeoJSON file:\n\n::: {#e690313e .cell execution_count=11}\n``` {.python .cell-code}\nfp = os.path.join('data', 'SB_aoi.geojson')\naoi = gpd.read_file(fp)\naoi.plot()\n```\n\n::: {.cell-output .cell-output-display}\n![](lesson-15-rioxarray_files/figure-html/cell-12-output-1.png){width=508 height=411}\n:::\n:::\n\n\nRemember: **if two geospatial sets will interact they need to be in the same CRS**. In our case, the AOI `geopandas.GeoDataFrame` does not have the same CRS as the rasters:\n\n::: {#bb409d23 .cell execution_count=12}\n``` {.python .cell-code}\n# Examine CRss\nprint('aoi CRS: ', aoi.crs)\nprint('nir CRS: ', nir.rio.crs)\nprint('rgb CRS: ', rgb.rio.crs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\naoi CRS:  EPSG:4326\nnir CRS:  EPSG:26911\nrgb CRS:  EPSG:26911\n```\n:::\n:::\n\n\nSo let's reproject:\n\n::: {#bfde1b83 .cell execution_count=13}\n``` {.python .cell-code}\n# Reproject AOI to RGB CRS\naoi = aoi.to_crs(rgb.rio.crs)\nprint('Matched CRS?',  aoi.crs == rgb.rio.crs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMatched CRS? True\n```\n:::\n:::\n\n\nAnd plot them together:\n\n::: {#b3512a72 .cell execution_count=14}\n``` {.python .cell-code}\n# Plot of RGB raster with AOI overlay\nfig, ax = plt.subplots(figsize=(6, 6 * rgb_aspect_ratio))  # Directly set size and aspect\nrgb.plot.imshow(ax=ax)\naoi.plot(ax=ax, alpha=0.6)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](lesson-15-rioxarray_files/figure-html/cell-15-output-1.png){width=354 height=414}\n:::\n:::\n\n\nTo clip the raster using the AOI polygon we use the `.rio.clip_box()` method:\n\n::: {#d1b98933 .cell execution_count=15}\n``` {.python .cell-code}\n# Clip rasters to AOI\nrgb_small = rgb.rio.clip_box(*aoi.total_bounds)\nnir_small = nir.rio.clip_box(*aoi.total_bounds)\n```\n:::\n\n\nNotice a few things:\n\n- we had to use the `.rio` accessor to access the `clip_box()` method \n- similarly to the `shapely.box()` function [we've used previously](/book/chapters/lesson-13-clipping/lesson-13-clipping.qmd), [`.rio.clip_box()` usual parameters](https://corteva.github.io/rioxarray/stable/rioxarray.html#rioxarray.raster_dataset.RasterDataset.clip_box) are `minx`, `miny`, `maxx`, `maxy`. We are using the `*` asterisk as an unpacking operator to get these from the list `aoi.total_bounds`.\n\nLet's check our clipped data:\n\n::: {#2e312ecd .cell execution_count=16}\n``` {.python .cell-code}\n# Examine clipped data \nprint('Original shape: ', nir.shape)\nprint('Clipped shape: ', nir_small.shape)\n\nnir_small.plot()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOriginal shape:  (3208, 2419)\nClipped shape:  (1710, 1995)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](lesson-15-rioxarray_files/figure-html/cell-17-output-2.png){width=605 height=464}\n:::\n:::\n\n\n:::{.callout-tip}\n## Check-in\nExamine the same updates for the RGB data.\n<!--\n```python\n# Examine shape updates\nprint('Original shape: ', rgb.shape)\nprint('Clipped shape: ', rgb_small.shape)\n\n# plot with correct sizes\nratio = rgb_small.rio.width / rgb_small.rio.height  # Raster's aspect ratio\nrgb_small.plot.imshow(size=4, \n                      aspect=ratio\n                      )\n```\n-->\n:::\n\n## Raster math\n\nWe often want perform calculations on rasters to create a new output raster, commonly known as \"raster math\". \n<!--TODO: add diagrams-->\n\nIn our case, we are interested in computing the Normalized Difference Vegetation Index (NDVI) over our AOI. \nThe NDVI is an index commonly used to check if an area has live green vegetation or not.\n\nAccording to the [Earth Observing System](https://eos.com/blog/ndvi-faq-all-you-need-to-know-about-ndvi/)\n\n> The results of the NDVI calculation range from -1 to 1. Negative values correspond to areas with water surfaces, manmade structures, rocks, clouds, snow; bare soil usually falls within 0.1-0.2 range; and plants will always have positive values between 0.2 and 1. Healthy, dense vegetation canopy should be above 0.5, and sparse vegetation will most likely fall within 0.2 to 0.5. \n\nThe NDVI is calculated using the NIR and red bands. \nThe formula is\n\n$NDVI = \\frac{NIR - Red}{NIR + Red}.$\n\nFirst, let's select the red band:\n\n::: {#65ebff9a .cell execution_count=17}\n``` {.python .cell-code}\n# Select dimension by name and coordinate by label\nred = rgb_small.sel(band=1)\nred\n```\n\n::: {.cell-output .cell-output-display execution_count=81}\n```{=html}\n<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=dark],\nbody[data-theme=dark],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1F1F1F;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 20px 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: none;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: '►';\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: '▼';\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: '(';\n}\n\n.xr-dim-list:after {\n  content: ')';\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: ',';\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (y: 1710, x: 1995)&gt;\n[3411450 values with dtype=uint8]\nCoordinates:\n    band         int64 1\n  * x            (x) float64 2.513e+05 2.513e+05 ... 2.525e+05 2.525e+05\n  * y            (y) float64 3.813e+06 3.813e+06 ... 3.812e+06 3.812e+06\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Area\n    scale_factor:   1.0\n    add_offset:     0.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>y</span>: 1710</li><li><span class='xr-has-index'>x</span>: 1995</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-761459fa-b6a6-4c54-8566-e5204aa04b32' class='xr-array-in' type='checkbox' checked><label for='section-761459fa-b6a6-4c54-8566-e5204aa04b32' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>...</span></div><div class='xr-array-data'><pre>[3411450 values with dtype=uint8]</pre></div></div></li><li class='xr-section-item'><input id='section-d69828d9-e85a-454c-9a90-b1832fa2f34e' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d69828d9-e85a-454c-9a90-b1832fa2f34e' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>band</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1</div><input id='attrs-049bda4c-851e-416e-abb7-8ddd362644bd' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-049bda4c-851e-416e-abb7-8ddd362644bd' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a209ebea-c747-4518-a904-bcc97a39eeae' class='xr-var-data-in' type='checkbox'><label for='data-a209ebea-c747-4518-a904-bcc97a39eeae' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array(1)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>2.513e+05 2.513e+05 ... 2.525e+05</div><input id='attrs-b3aa5ca3-f4c1-4c30-a760-b8b63c6e1e4d' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-b3aa5ca3-f4c1-4c30-a760-b8b63c6e1e4d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c58c6b87-cc17-402e-9d3f-a5fc85051f7a' class='xr-var-data-in' type='checkbox'><label for='data-c58c6b87-cc17-402e-9d3f-a5fc85051f7a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>axis :</span></dt><dd>X</dd><dt><span>long_name :</span></dt><dd>x coordinate of projection</dd><dt><span>standard_name :</span></dt><dd>projection_x_coordinate</dd><dt><span>units :</span></dt><dd>metre</dd></dl></div><div class='xr-var-data'><pre>array([251294.1, 251294.7, 251295.3, ..., 252489.3, 252489.9, 252490.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>3.813e+06 3.813e+06 ... 3.812e+06</div><input id='attrs-1f91295e-2cc6-43f2-b85d-15683f57fb44' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-1f91295e-2cc6-43f2-b85d-15683f57fb44' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b35f776a-b199-458d-9e09-c613ba65f4ff' class='xr-var-data-in' type='checkbox'><label for='data-b35f776a-b199-458d-9e09-c613ba65f4ff' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>axis :</span></dt><dd>Y</dd><dt><span>long_name :</span></dt><dd>y coordinate of projection</dd><dt><span>standard_name :</span></dt><dd>projection_y_coordinate</dd><dt><span>units :</span></dt><dd>metre</dd></dl></div><div class='xr-var-data'><pre>array([3812760.3, 3812759.7, 3812759.1, ..., 3811736.1, 3811735.5, 3811734.9])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>spatial_ref</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0</div><input id='attrs-e4f65a21-ea48-496f-b204-f619b1d62956' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e4f65a21-ea48-496f-b204-f619b1d62956' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9bd25029-df53-4ebd-829b-33aa3c69ed60' class='xr-var-data-in' type='checkbox'><label for='data-9bd25029-df53-4ebd-829b-33aa3c69ed60' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>crs_wkt :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>semi_major_axis :</span></dt><dd>6378137.0</dd><dt><span>semi_minor_axis :</span></dt><dd>6356752.314140356</dd><dt><span>inverse_flattening :</span></dt><dd>298.257222101</dd><dt><span>reference_ellipsoid_name :</span></dt><dd>GRS 1980</dd><dt><span>longitude_of_prime_meridian :</span></dt><dd>0.0</dd><dt><span>prime_meridian_name :</span></dt><dd>Greenwich</dd><dt><span>geographic_crs_name :</span></dt><dd>NAD83</dd><dt><span>horizontal_datum_name :</span></dt><dd>North American Datum 1983</dd><dt><span>projected_crs_name :</span></dt><dd>NAD83 / UTM zone 11N</dd><dt><span>grid_mapping_name :</span></dt><dd>transverse_mercator</dd><dt><span>latitude_of_projection_origin :</span></dt><dd>0.0</dd><dt><span>longitude_of_central_meridian :</span></dt><dd>-117.0</dd><dt><span>false_easting :</span></dt><dd>500000.0</dd><dt><span>false_northing :</span></dt><dd>0.0</dd><dt><span>scale_factor_at_central_meridian :</span></dt><dd>0.9996</dd><dt><span>spatial_ref :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>GeoTransform :</span></dt><dd>251293.8 0.6000000000000116 0.0 3812760.6 0.0 -0.600000000000218</dd></dl></div><div class='xr-var-data'><pre>array(0)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-bd8ede93-d928-42d6-a75b-39bd861f872e' class='xr-section-summary-in' type='checkbox'  ><label for='section-bd8ede93-d928-42d6-a75b-39bd861f872e' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-263ba512-80db-4754-bcb2-0e15e4300c5e' class='xr-index-data-in' type='checkbox'/><label for='index-263ba512-80db-4754-bcb2-0e15e4300c5e' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([251294.09999999998, 251294.69999999998,           251295.3,\n       251295.89999999997, 251296.49999999997, 251297.09999999998,\n       251297.69999999998,           251298.3, 251298.89999999997,\n       251299.49999999997,\n       ...\n                 252485.1, 252485.69999999998,           252486.3,\n                 252486.9,           252487.5,           252488.1,\n       252488.69999999998,           252489.3,           252489.9,\n                 252490.5],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=1995))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-66326752-c719-457b-a16a-906c9fa09761' class='xr-index-data-in' type='checkbox'/><label for='index-66326752-c719-457b-a16a-906c9fa09761' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([3812760.3000000003,          3812759.7,          3812759.1,\n                3812758.5, 3812757.9000000004, 3812757.3000000003,\n                3812756.7,          3812756.1,          3812755.5,\n       3812754.9000000004,\n       ...\n       3811740.3000000003,          3811739.7,          3811739.1,\n                3811738.5,          3811737.9, 3811737.3000000003,\n                3811736.7,          3811736.1,          3811735.5,\n                3811734.9],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=1710))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-5dafa4b7-b205-4464-a547-48066e691fc0' class='xr-section-summary-in' type='checkbox'  checked><label for='section-5dafa4b7-b205-4464-a547-48066e691fc0' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>AREA_OR_POINT :</span></dt><dd>Area</dd><dt><span>scale_factor :</span></dt><dd>1.0</dd><dt><span>add_offset :</span></dt><dd>0.0</dd></dl></div></li></ul></div></div>\n```\n:::\n:::\n\n\nWe can perform raster calculations using the same arithmetic we use for `numpy.array`s (because, underneath it all, that's what they are). \nSo our NDVI calculation is as follows:\n\n::: {#a3b6bd9a .cell execution_count=18}\n``` {.python .cell-code}\nndvi = (nir - red)/(nir + red)\nndvi.plot()\n```\n\n::: {.cell-output .cell-output-display}\n![](lesson-15-rioxarray_files/figure-html/cell-19-output-1.png){width=590 height=449}\n:::\n:::\n\n\nDo these results look as expected?\n\n### Data type issues\nThe `uint8` (8-bit unsigned integer) is a very small data type that only holds integers from 0 up to 255. \nIn particular, calculations don't return what what we are used to when working with intgers ([they're done module 256](https://en.wikipedia.org/wiki/Modular_arithmetic)):\n\n::: {#2eb7825e .cell execution_count=19}\n``` {.python .cell-code}\nnp.uint8(150) + np.uint8(150)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/var/folders/gm/chd1kps96_g7xdxyfw150wm80000gp/T/ipykernel_2983/1890984988.py:1: RuntimeWarning: overflow encountered in scalar add\n  np.uint8(150) + np.uint8(150)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=83}\n```\n44\n```\n:::\n:::\n\n\nIn the NDVI formula we have to add NIR + Red. \nIf both NIR and Red are very close to 255, when we add them, the calculation overflows the `uint8` data type and we don't get the expected results.\n\n:::{.callout-warning}\n## Avoid silent failures: ALWAYS verify your results!\nNotice that when we performed the NDVI calculation we did not get any warning, although we were overflowing the computation at every cell of our array. \nThis is can be an example of what is referred as *silent failure* in programming, where we don't get any warnings about the errors or unexpected behavior in our computation. \n**That's why it's so important to double-check our results!**\n:::\n\n### Updating data types\n\nTo be able to perform the calculation successfully, we will need to udpate the data type of our rasters into `int16`, which will be big enough to hold all the numbers that appear in the calculations:\n\n::: {#b50137e2 .cell execution_count=20}\n``` {.python .cell-code}\n# Update data type to int16 to perform NDVI calculation\nred16 = red.astype('int16')\nnir16 = nir_small.astype('int16')\n\nprint('RED: original dtype:', rgb_small.dtype, '.... converted dtype:', red16.dtype)\nprint('NIR: original dtype:', nir.dtype, '.... converted dtype:', nir16.dtype)\n\n# Calculate NDVI\nndvi = (nir16 - red16)/(nir16+red16)\n\n# Plot\nfig, ax = plt.subplots()  # Adjust figure size\nndvi.plot(\n    ax=ax,\n    cmap=\"RdYlGn\",  # Colormap for NDVI\n    vmin=-1,  # Minimum value\n    vmax=1,   # Maximum value\n    cbar_kwargs={\"label\": \"NDVI\"}  # Label for color bar\n)\nax.set_title(\"Normalized Difference Vegetation Index\\nnear Santa Barbara Courthouse\")  # Add title\n\n# Remove axes ticks\nax.set_xticks([])  \nax.set_yticks([])  \n\n# Remove axes labels\nax.set_xlabel(\"\")  \nax.set_ylabel(\"\")  \n\nplt.show()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRED: original dtype: uint8 .... converted dtype: int16\nNIR: original dtype: uint8 .... converted dtype: int16\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](lesson-15-rioxarray_files/figure-html/cell-21-output-2.png){width=549 height=435}\n:::\n:::\n\n\nRemember that plants will always have positive NDVI values between 0.2 and 1. Can you spot the Santa Barbara Courthouse?\n\n",
    "supporting": [
      "lesson-15-rioxarray_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}