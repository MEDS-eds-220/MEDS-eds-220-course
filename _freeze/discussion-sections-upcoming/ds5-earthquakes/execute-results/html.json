{
  "hash": "ad7a03163fabcaa28559ab58ff77fe02",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Plotting geospatial data with Git Branching\nsubtitle: Week 5 - Discussion section\nweek: 5\nimage: images/earthquakes_map.png\nsidebar: false\n---\n\n## ðŸŽƒ Happy Halloween!! ðŸŽƒ \nIn this discussion section you will wrangle data about earthquakes and practice:\n\n- Breaking down a question into accessible data wrangling steps\n- Importing and plotting differnt types of geospatial data\n- Finding additional guidance online to carry out your data wrangling plans \n- Git branching and pull requests with a partner\n\n\n## Setup\n\n:::{.callout-tip appearance=\"minimal\"}\nWith your partner, decide which one of you will be Partner 1 and Partner 2. Then complete the following setup: \n\n### **Partner 1:**\n\n1.  Create a new Github repository titled `Earthquake-branching `. Add a README, a python gitignore, and an MIT License.\n\n2.  Add your partner as a collaborater on your repository. In your Repo, navigate to **Settings**. Click on \"Collaboraters\", \"Add People\", and add Partner #2 's github username as a collaborator. \n\n3.  Access the workbench-1 server and clone your new repository in your EDS220 folder. \n\n4.  Create a new Python notebook inside your `Earthquake-branching` directory and rename it to `section-5-earthquakes.ipynb`. \n\n5.  Use the terminal to push this file to your remote repository. \n\n6. Complete the following exercise ( up until step # **ADD STEP #**) together on Partner #1's computer. Don't worry, partner #2- since you are a collaborator, you have access to this repository like it is your own!\n:::\n\n\n\n## General directions\n:::{.callout-tip appearance=\"minimal\"}\n- Add comments as appropriate along your code following the course commenting standards.\n- Include markdown cells in between your code cells to add titles and information to each exercise\n- Commit every time you finish a major step. **Remember to write informative commits in the imperative mood.**\n:::\n\n## About the data\n\nFor this task you will use two datasets. \n\nThe first dataset is simplified data from the [USGS Earthquakes Database](https://earthquake.usgs.gov/earthquakes/search/). This data is in tabular format and has the following columns:\n\n| Column | Description |\n|------|-----|\n| time |  date and time of event (all events from 2014)     |\n| latitude | decimal degrees [-90,90]|\n| longitude | decimal degrees [-360,360] |\n| depth | depth of the event (km) |\n| mag | magnitude of event  |\n| id | event identifier  |\n| place | where the event took place  |\n| type | type of event  |\n\nThis is the same dataset you used in assginment 1. You can access the data through [this link](https://raw.githubusercontent.com/carmengg/eds220-hwk-1/main/data/earthquake_data.csv).\n\nFurther information about the dataset can be accessed in the [ANSS Comprehensive Earthquake Catalog (ComCat) Documentation](https://earthquake.usgs.gov/data/comcat/).\n\nThe second dataset is [Natural Earth](https://www.naturalearthdata.com)'s low resolution cultural boundaries data. These are useful to make maps of the whole world, although might not be suitable for mapping individual nations or finer geospatial analysis. You can access the \"Admin 0 â€“ Countries\" dataset available in [this link](https://www.naturalearthdata.com/downloads/110m-cultural-vectors/).\n\n## 1. Brainstorm\n\nIn this session you will recreate the following map:\n\n![](/discussion-sections/images/earthquakes_map.png)\n\n1. Individually, write down high-level steps on how you would explore and wrangle the data to produce this map. Do not code anything yet. \n\n2. Discuss your high-level steps with your team. What do you see as potential challenges to implementing your plan?\n\n3. As a team, select an initial plan for recreating this plot.\n\n## 2. Create the plot\n\nUse your plan as a starting point to recreate the plot.\n\n- You may (or not) need to look online to carry out some of the steps in your plan. It is completely fine to seek help online! Resourceful troubleshooting is a key skill in data science.\n\n- Itâ€™s ok if your initial plan changes as you work with the data and discuss challenges with your team! This brainstorm is to create a shared starting point.\n\n<p style=\"text-align: center;\">\n**Don't forget to write informative commits in the imperative every time you finish a major step.**\n</p>\n\n## 3. Update your notebook\n\na. Include any takeaways from the map in a markdown cell after your plot.\n\nb. Go over your notebook and add markdown cells with appropriate titles and subtitles to guide the reader through the different steps in your workflow. \n\nc. Include a markdown cell at the top with a title for your notebook and a description of what it is about.\n\n\n# Branching\n\nIt's time to practice some branching! Creating branches on Github encourages collaboration on Github repos without all the merge conflicts! A branch gives you an isolated environment to make changes without immediatley effecting the `main` branch. \n\n## Partner 2 Updates\n\n### **Partner 2**\n\n1. Clone the `Earthquake-branching` repository that your partner added you as a collaborator on to your Workbench. \n\n2. Create a new branch to make edits on with the following code in the workbnech terminal. This code is creating a new branch and calling it partner2-branch (be sure to update partner2 with partner 2's name!)\n\n\n```{bash}\ngit checkout -b partner2-branch`\n```\n\n3. Double check that you are on your new branch. Run the following code in the terminal. If it returns an asterik (*) next to your new branch name, you are on your new branch! \n\n`git branch` \n\n4. Make the following changes on your new branch: \n\n- Update the color to be a fun Halloween color! \n- Follow the documentation for [`plt.figtext`](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.figtext.html) to add your name as an author on this plot in the bottom right corner. \n\n\n5. Set the upstream remote branches\n\n\n\n\n\n\n\n\n\n\n\n<!--\n```python\n\nimport os\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n\n# Read in data\nraw_eqk = pd.read_csv('https://raw.githubusercontent.com/carmengg/eds220-hwk-1/main/data/earthquake_data.csv')\n\nfp = os.path.join('data','ne_110m_admin_0_countries','ne_110m_admin_0_countries.shp')\nworldmap = gpd.read_file(fp)\n\n# Select only earthquakes of magnitude geq 6.5\neqk = raw_eqk[(raw_eqk.type == 'earthquake') & (raw_eqk.mag >= 6.5)]\n\n# Convert earthquake data into geo-df\neqk = gpd.GeoDataFrame(eqk, \n                       geometry = gpd.points_from_xy(eqk.longitude, eqk.latitude),\n                       crs='EPSG:4326'\n                       )\n\n# Create plot\nfig, ax = plt.subplots(figsize=(10,8))\nax.axis('off')\n\nworldmap.plot(ax=ax,\n           color='lightgrey')\neqk.plot(ax=ax,\n        column='mag',\n        cmap='Oranges',\n        edgecolor='brown',\n        legend=True,\n        legend_kwds={'shrink':.6,\n                    'label':'moment magnitude'})\n\nax.set_title('Earthquakes of magnitude at least 6.5 in 2014')\n\nax.annotate('Data: USGS Earthquakes Database',\n             xy=(0.085,0.15),\n             xycoords='figure fraction',\n             fontsize=9,\n             color='0.7')\n\nplt.show()\n```\n-->\n\n",
    "supporting": [
      "ds5-earthquakes_files"
    ],
    "filters": [],
    "includes": {}
  }
}