# Assignment 4

Task 1 will contribute 20% to the total grade of the assignment and task 2 will contribute 80%.

## Submission instructions 
:::{.callout-warning appearance="minimal"}

This assignment is due by **11:59 pm on Saturday, November 23**. All tasks for this assignment should be submitted via Gradescope. Make sure you double-check your submission to ensure it satisfies all the items in these checklists:

- File formatting and uploading:
  - [ ] Answer for task 1 must be submitted as a PDF file.
  - [ ] Answers for task 2 must be submitted as .ipynb files (Jupyter Notebooks) to Gradescope, *not* a PDF, html or other format.
  - [ ] Double-check that each notebook or PDF is uploaded to the correct task on Gradescope. 
  - [ ] Before you upload your finished notebook to Gradescope, please rename your notebook so they are called
    - `hwk4-task2-fire-perimeter-YOURLASTNAME.ipynb` and 
    - `hwk4-task2-false-color-YOURLASTNAME.ipynb`

- Notebook content checklists:
  - [ ] Ensure your notebooks include a link to your assignment's GitHub repository in the designated section.
  - [ ] The notebooks you submit must have your solutions to the exercises, They *should not be the blank template notebooks*. 
  - [ ] The notebooks you submit must include your code *and* all required rendered plots, graphs, and printed output. Run all cells before submitting your .ipynb file and make sure all the outputs are visible.


**Resubmissions after the due date due to not satisfying one of the checks above will be strictly held to the course's 50%-regrade resubmission policy (see syllabus).**

If you have any questions about assignment logistics, please reach out to the TA or instructor by 5 pm Friday, November 22. 
:::


## Task 1: The politics of pixels reading

When working with satellite data, it’s easy to assume that it is inherently objective and equally accessible to everyone. However, Bennett et al., in their paper *The Politics of Pixels: A Review and Agenda for Critical Remote Sensing* (2022 @bennett_politics_2022), challenge this assumption, arguing that remote sensing needs a critical lens. They emphasize that various sociopolitical factors influence who collects remotely sensed data, how it’s collected, and ultimately, who benefits from its insights. This reading will encourage you to explore the biases and inequalities that can be embedded in remote sensing technologies and practices.

![](/assignments/images/spacex-VBNb52J8Trk-unsplash.jpg)


**Read the paper and write a one-paragraph (between 100 and 150 words) reflection about it.**
This paper is a bit denser than the others we’ve read, section V is worth special attention.
**Review the [rubric for this assignment here](https://docs.google.com/document/d/1GQ8C0APsoIG1R9UQL-QGOtENYi413_Fv/edit?usp=sharing&ouid=111507336322611936333&rtpof=true&sd=true).** Answer at least one of the following questions for your reflection:

1. Reflecting on your personal or professional background, how might sociopolitical factors shape the availability and interpretation of satellite and other remotely sensed data for communities or organizations you’re familiar with?

2. What potential ethical responsibilities arise for environmental data scientists when working with remote sensing data that may carry biases or limitations? 

3. If you were tasked with implementing remote sensing for a project, what steps might you take to ensure the data collected is fair, accessible, and unbiased? 


:::{.callout-warning appearance="minimal"}
Ready to submit your answer? Make sure your submission follows the checklist at the top of the assginment! 
:::

## Task 2:  Visualizing fire scars through false color

The Thomas Fire, which burned over 280,000 acres in Ventura and Santa Barbara counties in December 2017, was one of California's largest wildfires at the time. It caused widespread ecological damage, displaced communities, and left lasting environmental impacts.

False color imagery, created using satellite data from instruments like Landsat, is a useful tool for monitoring wildfire impacts. By assigning infrared bands to visible colors, these images highlight vegetation health, burn severity, and the extent of fire scars. This approach helps researchers and land managers assess recovery efforts, identify high-risk areas, and plan restoration strategies.

In this task, you will create a false color image of the Thomas Fire using remote sensing data, highlighting the fire scar and exploring how coding and data visualization support environmental monitoring.

![A Kern County firefighter stands watch as the Thomas Fire starts to spread over ridge lines in Toro Canyon.](/assignments/images/thomas_fire.png){width="70%"}

### About the data

In this task you will use two datsets. The first is a simplified collection of bands (red, green, blue, near-infrared and shortwave infrared) from the Landsat Collection 2 Level-2 atmosperically corrected surface reflectance data, collected by the Landsat 8 satellite. 

The data was retrieved from the [Microsof Planetary Computer data catalogue](https://planetarycomputer.microsoft.com/dataset/landsat-c2-l2) and pre-processed to remove data outside land and coarsen the spatial resolution. This data should be used for visualization and educational purposes only and can be accessed at this path within workbench-1:
```default
/courses/EDS220/data/hwk4_landsat_data landsat8-2018-01-26-sb-simplified.nc
```

The second dataset will be historical open-access data about fire perimeters in California. There are several datasets with this information online. You will need to select one from a reputable source that includes the fire perimeter of the Thomas Fire during 2017.

### Setup

:::{.callout-tip appearance="minimal"}
Create a new GitHub repository named `eds220-hwk4`. Within it, create a two notebooks named `hwk4-task2-false-color-YOURLASTNAME.ipynb` and `hwk4-task2-fire-perimeter-YOURLASTNAME.ipynb`. 

Your repository should have the following structure:
```default
eds220-hwk4
│   README.md
|   hwk4-task2-fire-perimeter-YOURLASTNAME.ipynb
│   hwk4-task2-false-color-YOURLASTNAME.ipynb
|   .gitignore
│
└───data
    │   thomas-fire-boundary-file

Read the [rubric for this task](https://docs.google.com/document/d/1-Zm731BLVCs1MXHT5R1H9rr6uvcwHnMZQ2q8xkQ_fWM/edit?usp=sharing) before you start working on it.
```
:::

### Instructions

#### 1. Reading
Read the following resources about false color images and Landsat imagery: 

- [NASA Earth Observatory - Why is that Forest Red and that Cloud Blue? How to Interpret a False-Color Satellite Image](https://earthobservatory.nasa.gov/features/FalseColor)

- [What are the band designations for the Landsat satellites?](https://www.usgs.gov/faqs/what-are-band-designations-landsat-satellites)

- [Common Landsat Band Combinations](https://www.usgs.gov/media/images/common-landsat-band-combinations)

<!--
- [How do I use a scale factor with Landsat Level-2 science products?](https://www.usgs.gov/faqs/how-do-i-use-a-scale-factor-landsat-level-2-science-products)
-->

#### 2. Fire perimeter data retrieval and selection

This section must be completed in the `hwk4-task2-fire-perimeter-YOURLASTNAME.ipynb` notebook. 

a. Explore the data and write a brief summary of the information you obtained from the preliminary information. Your summary should include the CRS of the data and whether this is projected or geographic.

b. From your fire perimeter data, select the Thomas Fire boundary. The fire occurred in 2017.

c. Save *only* the 2017 Thomas Fire boundary as a geospatial file in the format of your choosing. The file should go into the `data/` directory in your repository.

d. In a markdown cell, briefly explain your reasoning for selecting that specific file format. 

:::{.callout-caution appearance="minimal"}
Sections 3, 4, and 5 must be completed in the `hwk4-task2-fire-scar-YOURLASTNAME.ipynb` notebook. In this notebook you will be using both your fire perimeter data and the simplified Landsat data `landsat8-2018-01-26-sb-simplified.nc`. 
:::

#### 3. True color image

a. Construct a file path to the Landsat data using `os` and import it using `rioxr.open_rasterio()`.

b. Explore the data and write a brief summary of the information you obtained from the preliminary information. Your summary should include the a description of the data's variables and dimensions.

c. Drop the `band` dimension of the data. HINT: [`squeeze()`](https://docs.xarray.dev/en/stable/generated/xarray.DataArray.squeeze.html) and [`drop_vars()`](https://docs.xarray.dev/en/stable/generated/xarray.DataArray.drop_vars.html).

d. Without creating any new variables: 
  - select the red, green, and blue variables (in that order) of the `xarray.Dataset` holding the Landsat data, 
  - convert it to a `numpy.array` using the `to_array()` method, and then 
  - use `.plot.imshow()` to create an RGB image with the data. 
There will be a warning, that's ok.

e. Adjust the scale used for plotting the bands to get a true color image. 
HINT: [Check the `robust` parameter](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.imshow.html). The issue here is the clouds: their RGB values are outliers and cause the other values to be squished when plotting. 

f. In a markdown cell write a brief explanation comparing the ouputs for parts (a) and (b). 

#### 4. False color image
Without creating any new variables, create a false color image by plotting the short-wave infrared (swir22), near-infrared, and red variables (in that order).

#### 5. Map
a. Create a map showing the shortwave infrared/near-infrared/red false color image together with the Thomas Fire _perimeter_.  Customize it appropriately including, at least, an informative title and legend.

b. Write a figure description for the map including a brief explanation of how false color imagery is being used.

:::{.callout-caution appearance="minimal"}
The rest of the sections are about updating and cleaning your notebooks and repository. 
:::

#### 5. Clean your notebooks

The target audience for your notebooks is a fellow EDS 220 student who is just learning about wrangling raster data using Python. 

- [ ] Add enough and appropriate comments to explain your code.
- [ ] Add enough and appropriate markdown cells to explain the procedures you are using and their output.
- First cell in the notebook must be a markdown cell including: 
  - [ ] Title
  - [ ] Author
  - [ ] Link to GitHub repository containing the notebook(for grading purposes)
  - [ ] About section with the following subsections: 
    - [ ] Purpose
    - [ ] List of highlights of analysis. What do you consider to be the most important aspects of this coding exercise?
    - [ ] Dataset description
    - [ ] References to datasets

The rest of your notebook should be organized into logical subsections (indicated through markdown headers) for the analysis and visualization you are performing. The subsections should effectively guide the reader through the analysis.

#### 6. Update your repository

Update your repository's README with the following elements (based on [EDS 296](https://ucsb-meds.github.io/README-guidelines/)):

- [ ] **A short, but descriptive title.**
- [ ] **A brief explanation of the repository’s purpose.**
  Paragraphs or a bulleted list are both acceptable options
  You may include an image or logo that represents the project.
- [ ] **A concise description of what’s housed in the repository.**
  This includes information about the repository structure or file organization.
- [ ] **Details regarding data access.**
  Any necessary information on where data lives (e.g. is it housed in the repo, on a server, in a library / package etc.) and how to access it in order to run the code.
- [ ] **References or acknowledgements.**
In an appropriate, consistent format, including links.
Provide a reference to the course and any other sources that supported the development of the repository. Add references for data sets too.

:::{.callout-warning appearance="minimal"}
Ready to submit your answers? Make sure your submission follows the checklist at the top of the assginment! 
:::
