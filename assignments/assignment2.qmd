# Assignment 2

This assignment covers topics in the notes up to the [time series]() lesson. Task 1 will contribute 20% to the total grade of the assignment and tasks 2 and 3 will contribute 40% each.

## Submission instructions 
:::{.callout-warning appearance="minimal"}

This assignment is due by **11:59 pm on Saturday, October 25**. All tasks for this assignment should be submitted via Gradescope. Make sure you double-check your submission to ensure it satisfies all the items in these checklists:

- File formatting and uploading:
  - [ ] Answer for task 1 must be submitted as a PDF file.
  - [ ] Answers for tasks 2 and 3 must be submitted as .ipynb files (Jupyter Notebooks) to Gradescope, *not* a PDF, html or other format.
  - [ ] Double-check that each notebook or PDF is uploaded to the correct task on Gradescope. 
  - [ ] Before you upload your finished notebooks to Gradescope, please rename your notebooks so they are called
    - `hwk2-task2-aqi-YOURLASTNAME.ipynb` and 

- Notebook content checklists:
  - [ ] Ensure your notebooks include a link to your assignment's GitHub repository in the designated section.
  - [ ] The notebooks you submit must have your solutions to the exercises, They *should not be the blank template notebooks*. 
  - [ ] The notebooks you submit must include your code *and* all required rendered plots, graphs, and printed output. Run all cells before submitting your .ipynb file and make sure all the outputs are visible. The notebooks you submit must have the output from the final `grader.check_all()` cell. 



**Resubmissions after the due date due to not satisfying one of the checks above will be strictly held to the course's 50%-regrade resubmission policy (see syllabus).**

If you have any questions about assignment logistics, please reach out to the instructional team by 5 pm Friday, October 24. 
:::


::: {.callout-important}
## Rename homework notebooks before uploading them to Gradescope
For your [upcoming assignment submission](/assignments/assignment2.qmd), youâ€™ll be downloading your notebooks and then uploading them to Gradescope. Before you upload your finished notebooks to Gradescope, **please rename your notebooks** so they are called

- `hwk2-task2-salmon-YOURLASTNAME.ipynb` and 
- `hwk2-task3-aqi-YOURLASTNAME.ipynb.` 

Itâ€™s important to do this so we can keep track of resubmissions. 

Thanks!
:::


## Otter Grader Checks

:::{.callout-note appearance="minimal" collapse="true" }
## Expand to see how to auto-check your work

These notebooks utilize the `otter` library and have self contained checks within the notebooks to ensure you are on the right track. Follow the steps below to run the otter grader checks. 

1. Run the very first cell of the notebook that contains `#Initialize Otter`.
2. Fill in code where the notebook instructs you to do so. 
3. When you encounter a `gracer.check()` cell, like the image below, run the cell. Doing so will either return an emoji with the text "q# passed!", or it will tell you the test did not pass. If your test did not pass, try rereading the prompt and making sure your output is what you would expect. If you canâ€™t figure out where the issue is, discuss it with other people (first option always!), use Slack, or come see Annie or Carmen during student hours.

<img width="717" height="99" alt="Screenshot 2025-09-30 at 2 16 07â€¯PM" src="https://github.com/user-attachments/assets/7d76e82a-3c5e-4630-bcf5-c25e26bf5ee7" />


4. The very last cell of the notebook contains a cell with `grader_check_all()`. This runs all tests in the notebook and reports the tests that have passed as well as the ones that have failed. If the output of this cell looks like the image below (question numbers may differ), it means you passed all the autograder checks!

<img width="825" height="471" alt="Screenshot 2025-09-30 at 1 15 25â€¯PM" src="https://github.com/user-attachments/assets/e0a030a7-cce5-4901-b501-bfc2f86120ed" />


:::{.callout-warning appearance="minimal"}

Reminders: 

- Make sure youâ€™re keeping up with your classmateâ€™s questions and answers on Slack.
- When submitting your final notebook, follow the instructions above regarding how to name the notebook.
:::

:::


## AI Policy

:::{.callout-note appearance="minimal" collapse="true" }
## Expand to read course policy & access generative AI Use Documentation form

If you use generative AI on this assignment, you are expected to adhere to the following course policies:

- âœ… Cultivate understanding:  You should be able to fully understand, justify, and explain all the work you submit.
- ðŸ¤” Question AI outputs: The default should be to assume the answers you get from generative AI are incorrect and you must verify any information the platform generates.
- ðŸš« Academic integrity:  Submitting work you donâ€™t understand or canâ€™t explain or justify will be considered plagiarism, regardless of whether you have disclosed the use of generative AI or not. 
- ðŸ“„ Document any AI use: If you do end up using generative AI in your work, you will need to complete and submit the [Generative AI Use Documentation](https://docs.google.com/document/d/1Ly3MGsnd_d8Uau_kRd3WD4v46vFLKyj2FxEOvL5ihS4/edit?usp=sharing) form and upload it to the "Generate AI Documentation" portal on Gradescope. 

If there are concerns about AI use in your work, your instructor will ask you to meet and talk it through. If understanding is clearly lacking and this is the first time this happens, youâ€™ll have the chance to revise and resubmit your work for 50% of the original maximum grade within two days. 
:::


## Task 1: Better Science in Less Time Using Open Data Science Tools reading

Using the right tools for a reproducible, efficient, and shareable workflow can be transformational. The article *Our Path to Better Science in Less Time Using Open Data Science Tools* @lowndes_our_2017 recounts how switching to open data science tools made it possible to transform the [Ocean Health Index](https://oceanhealthindex.org) into an updatable and adaptable project. Although the paper focuses on using R, their learnings go well beyond this programming language and apply to anyone seeking to improve the reproducibility of their data analyses.

Want to hear more about paths to open science with accompanyed by beautiful ilustrations? Check out this talk where Dr. Allison Horst and lead author Dr. Julie Lowndes share their personal journey's towards open science and introduce the [Openscapes program!](https://openscapes.org)

{{< video https://www.youtube.com/watch?v=0nj0zGtOXhM >}}


**Read the paper and write a one-paragraph (between 100 and 150 words) reflection about it. Review the [rubric for this assignment here](https://docs.google.com/document/d/1GQ8C0APsoIG1R9UQL-QGOtENYi413_Fv/edit?usp=sharing&ouid=111507336322611936333&rtpof=true&sd=true).** Answer at least one of the following questions for your reflection:


1. In your previous working experience, have you been working with reproducibility in mind? Which tools have allowed you or prevented you from making your work reproducible? 
2. The paper presents different strategies for learning intentionally. Have you used any of these strategies? Could you adopt some as you progress in your courses and career?
3. What do the authors see as the role of Git and GitHub in supporting reproducibility, transparency, and communication? Is your experience using these tools similar?

:::{.callout-warning appearance="minimal"}
Ready to submit your answer? Make sure your submission follows the checklist at the top of the assginment! 
:::

## Setup for tasks 2 and 3

:::{.callout-tip appearance="minimal"}

1. Fork this repository: [https://github.com/MEDS-eds-220/eds220-hwk2](https://github.com/MEDS-eds-220/eds220-hwk2)

2. In the workbench-1 server, start a new JupyterLab session or access an active one.

3. Using the terminal, clone your fork of the `eds220-hwk2` repository into your `eds-220` directory.
:::

## Task 2: Wrangling Alaska salmon catch data 

This exercise is based on the [Cleaning and Wrangling Data in R lesson by the NCEAS Learning Hub](https://learning.nceas.ucsb.edu/2023-06-delta/session_11.html) @do-linh_open_2023.

In this task you will use simplified data from the Alaska Department of Fish & Game containing commercial salmon catch data from 1878 to 1997 @byerly_alaska_2016. The original data can be accessed from the [KNB repository](https://knb.ecoinformatics.org/view/df35b.304.2).


**Follow the instructions in the notebook `hwk2-task2-salmon.ipynb` to complete this task. Review the [rubric for this assignment here](https://docs.google.com/document/d/1x0BoU6IH4cnOR1-n7i9CYQ9wUC37yDpYlQ4j6rCfcsU/edit?usp=sharing).** In this task you will practice:

- detecting and wranglig messy data
- updating column data types
- obtaining summary statistics by groups
- creating exploratory plots
- creating a continuous, polished workflow
- version control with git following best practices


:::{.callout-warning appearance="minimal"}
Ready to submit your answers? Make sure your submission follows the checklist at the top of the assginment! 
:::

## Task 3: Visualizing AQI during the 2017 Thomas Fire in Santa Barbara County

In this task you will use [Air Quality Index (AQI)](https://www.airnow.gov/aqi/aqi-basics/) data from the [US Environmental Protection Agency](https://www.epa.gov) to visualize the impact on the AQI of the 2017 [Thomas Fire](https://en.wikipedia.org/wiki/Thomas_Fire). The Thomas Fire, which burned across Santa Barbara and Ventura counties in December 2017, has been one of California's largest wildfires, devastating over 280,000 acres of land, destroying wildlife habitats, and leading to soil erosion and increased flood risks in the region.

![Flames from the Thomas Fire burn down the face of the ridge above Highway 101 in the area of Seacliff, Solimar Beach and Faria Beach west of Ventura. Photo credit: [Â©Ray Ford / Noozhawk photo.](https://www.noozhawk.com/thomas_fire_threatens_ventura_ojai_valley_communities/)](/assignments/images/assignment-2/thomas-fire-noozhwak.jpg.webp){width=75%}

**Follow the instructions in the notebook `hwk2-task3-aqi.ipynb` to complete this task. Review the [rubric for this assignment here](https://docs.google.com/document/d/1x0BoU6IH4cnOR1-n7i9CYQ9wUC37yDpYlQ4j6rCfcsU/edit?usp=sharing).** In this task you will practice:

- date and string data wrangling
- combining multiple data frames
- visualizing time series
- creating a continuous, polished workflow
- version control with git following best practices

:::{.callout-warning appearance="minimal"}
Ready to submit your answers? Make sure your submission follows the checklist at the top of the assginment! 
:::